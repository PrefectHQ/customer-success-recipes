{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Prefect Recipes \ud83e\uddd1\u200d\ud83c\udf73 \ud83e\udd50 This repository contains common and extensible Prefect patterns to drive efficient workflows \u2014 we like to call these patterns our recipes Here you'll find starter code and more advanced example use cases. Contributing = Swag \ud83e\udde2 We're always looking for new contributions! See our existing Recipe Ideas/Issues for inspiration. And check out Contributions to learn how you can add your Prefect 2.0 recipe and earn some swag! Issues / Bugs \ud83d\udc1b To report issues, typos, or link fixes, please open an issue. We appreciate it! Recipe Ideas \ud83d\udc69\u200d\ud83c\udf73 What are you interested in seeing examples of? Jot down your big idea here. Table of Contents \ud83d\udcd6 Getting Started Subflows Control Flow Optimization Notifications Flow Run Observability Parameters Testing Triggering Flow Runs Deployments Diving Deeper Data Engineering / DataOps AWS Infrastructure Azure Infrastructure GitHub Actions Legacy (Prefect 1.0) Issues & Bugs Recipe Requests Contributions Join the Discussion Thanks Getting Started \ud83c\udf6f Subflows Getting Started With Subflows Run Multiple Subflows or Child Flows in Parallel Subflow with a Different Task Runner Than Parent Flow Create a Subflow and Block Until It's Completed Running Subflows On Their Own Infrastructure Using a Separate Deployment Control Flow Conditionally Stop a Task Run Ensure Tasks Immediately Fail If Upstream Task Fails Define State Dependencies Between Tasks Optimization Cache a Task Result To Prevent Recomputation Notifications Send Notifications with a Slack Webhook Flow Run Observability Interact with REST API Determine Whether a Flow Run Was Executed Ad Hoc or on a Schedule Parameters Use flow parameters Testing Testing Flows, Subflows, and Tasks Triggering Flow Runs Triggering Flow Runs From a Deployment via API Call or From a Terminal Using Curl Event-Driven Data Pipelines with AWS Lambda and GitHub Actions Flow Deployment Deploy Flows to Run as a Local Process, Docker Container or a Kubernetes Job Deploy Flows to AWS Deploy Flows to GCP Deploy Flows to Azure Store Flows in GitHub and Execute in a Docker Container Python-Based Deployments Diving Deeper \ud83c\udf71 Data Engineering / DataOps Serverless Real-Time Data Pipelines on AWS with Prefect, ECS and GitHub Actions Build a Data Platform with Prefect, dbt, and Snowflake (using blocks) ELT/ETL Export Airbyte Configuration and Load to S3 bucket using blocks, including Python-based deployment ELT with Snowflake Using Async and Blocks AWS Infrastructure Deploy a Prefect agent to ECS using the AWS CLI Deploy a Prefect agent to ECS with Terraform Deploy Flows Using ECSTask Infrastructure Blocks Deploy a Prefect agent to ECS Fargate using CloudFormation and GitHub Actions Azure Infrastructure Setup Azure with Prefect Deploy Prefect Orion to an AKS Cluster with Azure Blob Storage Setup an Azure VM and Run the Prefect Agent Github Actions Build flow image and Prefect deployment with storage and infra Blocks on push to branch Build and Push flow docker image to Google Artifact Registry Build / Apply prefect deployment with blocks on change to python files Automate Prefect Deployments to AWS ECS Fargate Using GitHub Actions Automate Python-Based Deployments with GitHub Actions Dockerfiles Build an image from the latest Python 3.9 base image and your requirements.txt Django Using Django with Prefect 2 Prefect 1.0 Legacy Register a Prefect Flow Run GraphQL Queries Airbyte Orchestration ETL with AWS S3 and Snowflake Use AWS Lambda for Event-Driven Flows Read Secrets into Prefect Cloud tenant Handle DBT Model Failures S3 Flow Storage on EKS Use LocalExecutor to run Dask computations on a Coiled cluster Use DaskExecutor to run Prefect tasks in parallel on a Coiled cluster Join our discussions \ud83d\udde3\ufe0f We use our Slack Community and Discourse to discuss all things Prefect-- such as FAQ, use cases and integrations. Join in the conversation :smile: Contributions We're always looking for new contributions! You can add your Prefect 2.0 recipe and earn some swag in a few simple steps: Look through the recipes to ensure your example is unique Clone the prefect-recipes repo: git clone git@github.com:PrefectHQ/prefect-recipes.git Create and checkout a new branch: git branch feat/recipe-name git checkout feat/recipe-name Add your code under the appropriate category, making sure it is reproducible and easy to understand. Add your recipe to README. Commit and push the code to your remote branch. Create a PR \ud83e\udd0c Thanks \ud83d\udc99 Thank you for your contributions and efforts to improve prefect-recipes. We're glad to have you in our community!","title":"Home"},{"location":"#prefect-recipes","text":"This repository contains common and extensible Prefect patterns to drive efficient workflows \u2014 we like to call these patterns our recipes Here you'll find starter code and more advanced example use cases.","title":"Prefect Recipes \ud83e\uddd1\u200d\ud83c\udf73 \ud83e\udd50"},{"location":"#contributing-swag","text":"We're always looking for new contributions! See our existing Recipe Ideas/Issues for inspiration. And check out Contributions to learn how you can add your Prefect 2.0 recipe and earn some swag!","title":"Contributing = Swag \ud83e\udde2"},{"location":"#issues-bugs","text":"To report issues, typos, or link fixes, please open an issue. We appreciate it!","title":"Issues / Bugs \ud83d\udc1b"},{"location":"#recipe-ideas","text":"What are you interested in seeing examples of? Jot down your big idea here.","title":"Recipe Ideas \ud83d\udc69\u200d\ud83c\udf73"},{"location":"#table-of-contents","text":"Getting Started Subflows Control Flow Optimization Notifications Flow Run Observability Parameters Testing Triggering Flow Runs Deployments Diving Deeper Data Engineering / DataOps AWS Infrastructure Azure Infrastructure GitHub Actions Legacy (Prefect 1.0) Issues & Bugs Recipe Requests Contributions Join the Discussion Thanks","title":"Table of Contents \ud83d\udcd6"},{"location":"#getting-started","text":"","title":"Getting Started \ud83c\udf6f"},{"location":"#subflows","text":"Getting Started With Subflows Run Multiple Subflows or Child Flows in Parallel Subflow with a Different Task Runner Than Parent Flow Create a Subflow and Block Until It's Completed Running Subflows On Their Own Infrastructure Using a Separate Deployment","title":"Subflows"},{"location":"#control-flow","text":"Conditionally Stop a Task Run Ensure Tasks Immediately Fail If Upstream Task Fails Define State Dependencies Between Tasks","title":"Control Flow"},{"location":"#optimization","text":"Cache a Task Result To Prevent Recomputation","title":"Optimization"},{"location":"#notifications","text":"Send Notifications with a Slack Webhook","title":"Notifications"},{"location":"#flow-run-observability","text":"Interact with REST API Determine Whether a Flow Run Was Executed Ad Hoc or on a Schedule","title":"Flow Run Observability"},{"location":"#parameters","text":"Use flow parameters","title":"Parameters"},{"location":"#testing","text":"Testing Flows, Subflows, and Tasks","title":"Testing"},{"location":"#triggering-flow-runs","text":"Triggering Flow Runs From a Deployment via API Call or From a Terminal Using Curl Event-Driven Data Pipelines with AWS Lambda and GitHub Actions","title":"Triggering Flow Runs"},{"location":"#flow-deployment","text":"Deploy Flows to Run as a Local Process, Docker Container or a Kubernetes Job Deploy Flows to AWS Deploy Flows to GCP Deploy Flows to Azure Store Flows in GitHub and Execute in a Docker Container Python-Based Deployments","title":"Flow Deployment"},{"location":"#diving-deeper","text":"","title":"Diving Deeper \ud83c\udf71"},{"location":"#data-engineering-dataops","text":"Serverless Real-Time Data Pipelines on AWS with Prefect, ECS and GitHub Actions Build a Data Platform with Prefect, dbt, and Snowflake (using blocks)","title":"Data Engineering / DataOps"},{"location":"#eltetl","text":"Export Airbyte Configuration and Load to S3 bucket using blocks, including Python-based deployment ELT with Snowflake Using Async and Blocks","title":"ELT/ETL"},{"location":"#aws-infrastructure","text":"Deploy a Prefect agent to ECS using the AWS CLI Deploy a Prefect agent to ECS with Terraform Deploy Flows Using ECSTask Infrastructure Blocks Deploy a Prefect agent to ECS Fargate using CloudFormation and GitHub Actions","title":"AWS Infrastructure"},{"location":"#azure-infrastructure","text":"Setup Azure with Prefect Deploy Prefect Orion to an AKS Cluster with Azure Blob Storage Setup an Azure VM and Run the Prefect Agent","title":"Azure Infrastructure"},{"location":"#github-actions","text":"Build flow image and Prefect deployment with storage and infra Blocks on push to branch Build and Push flow docker image to Google Artifact Registry Build / Apply prefect deployment with blocks on change to python files Automate Prefect Deployments to AWS ECS Fargate Using GitHub Actions Automate Python-Based Deployments with GitHub Actions","title":"Github Actions"},{"location":"#dockerfiles","text":"Build an image from the latest Python 3.9 base image and your requirements.txt","title":"Dockerfiles"},{"location":"#django","text":"Using Django with Prefect 2","title":"Django"},{"location":"#prefect-10-legacy","text":"Register a Prefect Flow Run GraphQL Queries Airbyte Orchestration ETL with AWS S3 and Snowflake Use AWS Lambda for Event-Driven Flows Read Secrets into Prefect Cloud tenant Handle DBT Model Failures S3 Flow Storage on EKS Use LocalExecutor to run Dask computations on a Coiled cluster Use DaskExecutor to run Prefect tasks in parallel on a Coiled cluster","title":"Prefect 1.0 Legacy"},{"location":"#join-our-discussions","text":"We use our Slack Community and Discourse to discuss all things Prefect-- such as FAQ, use cases and integrations. Join in the conversation :smile:","title":"Join our discussions \ud83d\udde3\ufe0f"},{"location":"#contributions","text":"We're always looking for new contributions! You can add your Prefect 2.0 recipe and earn some swag in a few simple steps: Look through the recipes to ensure your example is unique Clone the prefect-recipes repo: git clone git@github.com:PrefectHQ/prefect-recipes.git Create and checkout a new branch: git branch feat/recipe-name git checkout feat/recipe-name Add your code under the appropriate category, making sure it is reproducible and easy to understand. Add your recipe to README. Commit and push the code to your remote branch. Create a PR \ud83e\udd0c","title":"Contributions"},{"location":"#thanks","text":"Thank you for your contributions and efforts to improve prefect-recipes. We're glad to have you in our community!","title":"Thanks \ud83d\udc99"},{"location":"diving_deeper/","text":"Diving Deeper \ud83c\udf71 Data Engineering / DataOps Serverless Real-Time Data Pipelines on AWS with Prefect, ECS and GitHub Actions ELT/ETL Export Airbyte Configuration and Load to S3 bucket using blocks, including Python-based deployment ELT with Snowflake Using Async and Blocks AWS Infrastructure Deploy a Prefect agent to ECS using the AWS CLI Deploy a Prefect agent to ECS with Terraform Deploy Flows Using ECSTask Infrastructure Blocks Azure Infrastructure Setup Azure with Prefect Deploy Prefect Orion to an AKS Cluster with Azure Blob Storage Setup an Azure VM and Run the Prefect Agent Github Actions Build flow image and Prefect deployment with storage and infra Blocks on push to branch Build and Push flow docker image to Google Artifact Registry Build / Apply prefect deployment with blocks on change to python files Automate Prefect Deployments to AWS ECS Fargate Using GitHub Actions Dockerfiles Build an image from the latest Python 3.9 base image and your requirements.txt Django Using Django with Prefect 2 Prefect 1.0 Legacy Register a Prefect Flow Run GraphQL Queries Airbyte Orchestration ETL with AWS S3 and Snowflake Use AWS Lambda for Event-Driven Flows Read Secrets into Prefect Cloud tenant Handle DBT Model Failures S3 Flow Storage on EKS Use LocalExecutor to run Dask computations on a Coiled cluster Use DaskExecutor to run Prefect tasks in parallel on a Coiled cluster","title":"Diving Deeper"},{"location":"diving_deeper/#diving-deeper","text":"","title":"Diving Deeper \ud83c\udf71"},{"location":"diving_deeper/#data-engineering-dataops","text":"Serverless Real-Time Data Pipelines on AWS with Prefect, ECS and GitHub Actions","title":"Data Engineering / DataOps"},{"location":"diving_deeper/#eltetl","text":"Export Airbyte Configuration and Load to S3 bucket using blocks, including Python-based deployment ELT with Snowflake Using Async and Blocks","title":"ELT/ETL"},{"location":"diving_deeper/#aws-infrastructure","text":"Deploy a Prefect agent to ECS using the AWS CLI Deploy a Prefect agent to ECS with Terraform Deploy Flows Using ECSTask Infrastructure Blocks","title":"AWS Infrastructure"},{"location":"diving_deeper/#azure-infrastructure","text":"Setup Azure with Prefect Deploy Prefect Orion to an AKS Cluster with Azure Blob Storage Setup an Azure VM and Run the Prefect Agent","title":"Azure Infrastructure"},{"location":"diving_deeper/#github-actions","text":"Build flow image and Prefect deployment with storage and infra Blocks on push to branch Build and Push flow docker image to Google Artifact Registry Build / Apply prefect deployment with blocks on change to python files Automate Prefect Deployments to AWS ECS Fargate Using GitHub Actions","title":"Github Actions"},{"location":"diving_deeper/#dockerfiles","text":"Build an image from the latest Python 3.9 base image and your requirements.txt","title":"Dockerfiles"},{"location":"diving_deeper/#django","text":"Using Django with Prefect 2","title":"Django"},{"location":"diving_deeper/#prefect-10-legacy","text":"Register a Prefect Flow Run GraphQL Queries Airbyte Orchestration ETL with AWS S3 and Snowflake Use AWS Lambda for Event-Driven Flows Read Secrets into Prefect Cloud tenant Handle DBT Model Failures S3 Flow Storage on EKS Use LocalExecutor to run Dask computations on a Coiled cluster Use DaskExecutor to run Prefect tasks in parallel on a Coiled cluster","title":"Prefect 1.0 Legacy"},{"location":"getting_started/","text":"Getting Started \ud83c\udf6f Subflows Getting Started With Subflows Run Multiple Subflows or Child Flows in Parallel Subflow with a Different Task Runner Than Parent Flow Create a Subflow and Block Until It's Completed Running Subflows On Their Own Infrastructure Using a Separate Deployment Control Flow Conditionally Stop a Task Run Ensure Tasks Immediately Fail If Upstream Task Fails Define State Dependencies Between Tasks Optimization Cache a Task Result To Prevent Recomputation Notifications Send Notifications with a Slack Webhook Flow Run Observability Interact with REST API Determine Whether a Flow Run Was Executed Ad Hoc or on a Schedule Parameters Use flow parameters Testing Testing Flows, Subflows, and Tasks Triggering Flow Runs Triggering Flow Runs From a Deployment via API Call or From a Terminal Using Curl Event-Driven Data Pipelines with AWS Lambda and GitHub Actions Flow Deployment Deploy Flows to Run as a Local Process, Docker Container or a Kubernetes Job Deploy Flows to AWS Deploy Flows to GCP Deploy Flows to Azure Store Flows in GitHub and Execute in a Docker Container Python-Based Deployments","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"","title":"Getting Started \ud83c\udf6f"},{"location":"getting_started/#subflows","text":"Getting Started With Subflows Run Multiple Subflows or Child Flows in Parallel Subflow with a Different Task Runner Than Parent Flow Create a Subflow and Block Until It's Completed Running Subflows On Their Own Infrastructure Using a Separate Deployment","title":"Subflows"},{"location":"getting_started/#control-flow","text":"Conditionally Stop a Task Run Ensure Tasks Immediately Fail If Upstream Task Fails Define State Dependencies Between Tasks","title":"Control Flow"},{"location":"getting_started/#optimization","text":"Cache a Task Result To Prevent Recomputation","title":"Optimization"},{"location":"getting_started/#notifications","text":"Send Notifications with a Slack Webhook","title":"Notifications"},{"location":"getting_started/#flow-run-observability","text":"Interact with REST API Determine Whether a Flow Run Was Executed Ad Hoc or on a Schedule","title":"Flow Run Observability"},{"location":"getting_started/#parameters","text":"Use flow parameters","title":"Parameters"},{"location":"getting_started/#testing","text":"Testing Flows, Subflows, and Tasks","title":"Testing"},{"location":"getting_started/#triggering-flow-runs","text":"Triggering Flow Runs From a Deployment via API Call or From a Terminal Using Curl Event-Driven Data Pipelines with AWS Lambda and GitHub Actions","title":"Triggering Flow Runs"},{"location":"getting_started/#flow-deployment","text":"Deploy Flows to Run as a Local Process, Docker Container or a Kubernetes Job Deploy Flows to AWS Deploy Flows to GCP Deploy Flows to Azure Store Flows in GitHub and Execute in a Docker Container Python-Based Deployments","title":"Flow Deployment"}]}